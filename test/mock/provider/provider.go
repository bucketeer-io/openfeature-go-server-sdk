// Code generated by MockGen. DO NOT EDIT.
// Source: provider.go
//
// Generated by this command:
//
//	mockgen -source=provider.go -package=provider -destination=../test/mock/provider/provider.go
//

// Package provider is a generated GoMock package.
package provider

import (
	context "context"
	reflect "reflect"

	model "github.com/bucketeer-io/go-server-sdk/pkg/bucketeer/model"
	user "github.com/bucketeer-io/go-server-sdk/pkg/bucketeer/user"
	gomock "go.uber.org/mock/gomock"
)

// MockBucketeerSDK is a mock of BucketeerSDK interface.
type MockBucketeerSDK struct {
	ctrl     *gomock.Controller
	recorder *MockBucketeerSDKMockRecorder
	isgomock struct{}
}

// MockBucketeerSDKMockRecorder is the mock recorder for MockBucketeerSDK.
type MockBucketeerSDKMockRecorder struct {
	mock *MockBucketeerSDK
}

// NewMockBucketeerSDK creates a new mock instance.
func NewMockBucketeerSDK(ctrl *gomock.Controller) *MockBucketeerSDK {
	mock := &MockBucketeerSDK{ctrl: ctrl}
	mock.recorder = &MockBucketeerSDKMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBucketeerSDK) EXPECT() *MockBucketeerSDKMockRecorder {
	return m.recorder
}

// BoolVariationDetails mocks base method.
func (m *MockBucketeerSDK) BoolVariationDetails(ctx context.Context, arg1 *user.User, featureID string, defaultValue bool) model.BKTEvaluationDetails[bool] {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BoolVariationDetails", ctx, arg1, featureID, defaultValue)
	ret0, _ := ret[0].(model.BKTEvaluationDetails[bool])
	return ret0
}

// BoolVariationDetails indicates an expected call of BoolVariationDetails.
func (mr *MockBucketeerSDKMockRecorder) BoolVariationDetails(ctx, arg1, featureID, defaultValue any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BoolVariationDetails", reflect.TypeOf((*MockBucketeerSDK)(nil).BoolVariationDetails), ctx, arg1, featureID, defaultValue)
}

// Close mocks base method.
func (m *MockBucketeerSDK) Close(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockBucketeerSDKMockRecorder) Close(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockBucketeerSDK)(nil).Close), ctx)
}

// Float64VariationDetails mocks base method.
func (m *MockBucketeerSDK) Float64VariationDetails(ctx context.Context, arg1 *user.User, featureID string, defaultValue float64) model.BKTEvaluationDetails[float64] {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Float64VariationDetails", ctx, arg1, featureID, defaultValue)
	ret0, _ := ret[0].(model.BKTEvaluationDetails[float64])
	return ret0
}

// Float64VariationDetails indicates an expected call of Float64VariationDetails.
func (mr *MockBucketeerSDKMockRecorder) Float64VariationDetails(ctx, arg1, featureID, defaultValue any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Float64VariationDetails", reflect.TypeOf((*MockBucketeerSDK)(nil).Float64VariationDetails), ctx, arg1, featureID, defaultValue)
}

// Int64VariationDetails mocks base method.
func (m *MockBucketeerSDK) Int64VariationDetails(ctx context.Context, arg1 *user.User, featureID string, defaultValue int64) model.BKTEvaluationDetails[int64] {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Int64VariationDetails", ctx, arg1, featureID, defaultValue)
	ret0, _ := ret[0].(model.BKTEvaluationDetails[int64])
	return ret0
}

// Int64VariationDetails indicates an expected call of Int64VariationDetails.
func (mr *MockBucketeerSDKMockRecorder) Int64VariationDetails(ctx, arg1, featureID, defaultValue any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Int64VariationDetails", reflect.TypeOf((*MockBucketeerSDK)(nil).Int64VariationDetails), ctx, arg1, featureID, defaultValue)
}

// ObjectVariationDetails mocks base method.
func (m *MockBucketeerSDK) ObjectVariationDetails(ctx context.Context, arg1 *user.User, featureID string, defaultValue any) model.BKTEvaluationDetails[any] {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ObjectVariationDetails", ctx, arg1, featureID, defaultValue)
	ret0, _ := ret[0].(model.BKTEvaluationDetails[any])
	return ret0
}

// ObjectVariationDetails indicates an expected call of ObjectVariationDetails.
func (mr *MockBucketeerSDKMockRecorder) ObjectVariationDetails(ctx, arg1, featureID, defaultValue any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ObjectVariationDetails", reflect.TypeOf((*MockBucketeerSDK)(nil).ObjectVariationDetails), ctx, arg1, featureID, defaultValue)
}

// StringVariationDetails mocks base method.
func (m *MockBucketeerSDK) StringVariationDetails(ctx context.Context, arg1 *user.User, featureID, defaultValue string) model.BKTEvaluationDetails[string] {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StringVariationDetails", ctx, arg1, featureID, defaultValue)
	ret0, _ := ret[0].(model.BKTEvaluationDetails[string])
	return ret0
}

// StringVariationDetails indicates an expected call of StringVariationDetails.
func (mr *MockBucketeerSDKMockRecorder) StringVariationDetails(ctx, arg1, featureID, defaultValue any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StringVariationDetails", reflect.TypeOf((*MockBucketeerSDK)(nil).StringVariationDetails), ctx, arg1, featureID, defaultValue)
}
